{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nexport function setCookie(days, name, value) {\n  var expires = new Date(Date.now() + days * 864e5).toUTCString();\n  var path = \"/\";\n  document.cookie = \"\".concat(name, \"=\").concat(encodeURIComponent(value), \"; expires=\").concat(expires, \"; path=\").concat(path);\n}\nexport function getCookie(name) {\n  var cookie = {};\n  document.cookie.split(\";\").forEach(function (el) {\n    var _el$split = el.split(\"=\"),\n        _el$split2 = _slicedToArray(_el$split, 2),\n        k = _el$split2[0],\n        v = _el$split2[1];\n\n    cookie[k.trim()] = v;\n  });\n  return cookie[name];\n}\nexport function truncate(element, limit, after) {\n  var trailing = element.length > limit ? after : '';\n  return element.substring(0, limit) + trailing;\n}","map":{"version":3,"sources":["/home/good-dev/Documents/Work/heytasker4/frontend/controllers/sjabloon/utilities.js"],"names":["setCookie","days","name","value","expires","Date","now","toUTCString","path","document","cookie","encodeURIComponent","getCookie","split","forEach","el","k","v","trim","truncate","element","limit","after","trailing","length","substring"],"mappings":";;;;;;;;;;;;AAAA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AAC3C,MAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaL,IAAI,GAAG,KAA7B,EAAoCM,WAApC,EAAhB;AACA,MAAMC,IAAI,GAAM,GAAhB;AAEAC,EAAAA,QAAQ,CAACC,MAAT,aAAqBR,IAArB,cAA6BS,kBAAkB,CAACR,KAAD,CAA/C,uBAAmEC,OAAnE,oBAAoFI,IAApF;AACD;AAED,OAAO,SAASI,SAAT,CAAmBV,IAAnB,EAAyB;AAC9B,MAAIQ,MAAM,GAAG,EAAb;AAEAD,EAAAA,QAAQ,CAACC,MAAT,CAAgBG,KAAhB,CAAsB,GAAtB,EAA2BC,OAA3B,CAAmC,UAASC,EAAT,EAAa;AAAA,oBAC1BA,EAAE,CAACF,KAAH,CAAS,GAAT,CAD0B;AAAA;AAAA,QACzCG,CADyC;AAAA,QACtCC,CADsC;;AAE9CP,IAAAA,MAAM,CAACM,CAAC,CAACE,IAAF,EAAD,CAAN,GAAmBD,CAAnB;AACD,GAHD;AAKA,SAAOP,MAAM,CAACR,IAAD,CAAb;AACD;AAED,OAAO,SAASiB,QAAT,CAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AAC9C,MAAIC,QAAQ,GAAGH,OAAO,CAACI,MAAR,GAAiBH,KAAjB,GAAyBC,KAAzB,GAAiC,EAAhD;AAEA,SAAOF,OAAO,CAACK,SAAR,CAAkB,CAAlB,EAAqBJ,KAArB,IAA8BE,QAArC;AACD","sourcesContent":["export function setCookie(days, name, value) {\n  const expires = new Date(Date.now() + days * 864e5).toUTCString()\n  const path    = \"/\"\n\n  document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=${path}`\n}\n\nexport function getCookie(name) {\n  let cookie = {};\n\n  document.cookie.split(\";\").forEach(function(el) {\n    let [k, v]        = el.split(\"=\");\n    cookie[k.trim()] = v;\n  })\n\n  return cookie[name];\n}\n\nexport function truncate(element, limit, after) {\n  var trailing = element.length > limit ? after : ''\n\n  return element.substring(0, limit) + trailing\n}\n\n"]},"metadata":{},"sourceType":"module"}